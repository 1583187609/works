import{l as g,t as b}from"./common-f4827de9.js";import{s as m}from"./storage-f5c2149e.js";import{d as v}from"./pinia-680d6f3f.js";import{O as k}from"./runtime-core.esm-bundler-95bf9971.js";const S={$AuditStatus:{0:{text:"已通过",attrs:{type:"success"}},1:{text:"审核中",attrs:{type:"warning"}},2:{text:"未审核",attrs:{type:"info"}}}},h={...S,Education:{0:{text:"未知",attrs:{type:"info"}},1:{text:"专科",attrs:{type:"info"}},2:{text:"本科",attrs:{type:""}},3:{text:"硕士",attrs:{type:"warning"}},4:{text:"博士",attrs:{type:"success"}}},Enable:{1:{text:"启用",attrs:{type:""}},2:{text:"禁用",attrs:{type:""}}},GetRewardWay:{0:{text:"手动",attrs:{type:"info"}},1:{text:"自动",attrs:{type:""}}},MenuType:{0:{text:"目录",attrs:{type:""}},1:{text:"菜单",attrs:{type:""}},2:{text:"外链",attrs:{type:""}},3:{text:"按钮",attrs:{type:""}}},RoleType:{0:{text:"超级管理员",attrs:{type:""}},1:{text:"普通管理员",attrs:{type:""}},2:{text:"开发者",attrs:{type:""}},3:{text:"客户",attrs:{type:""}},4:{text:"游客",attrs:{type:""}}},Sex:{0:{text:"未知",attrs:{type:""}},1:{text:"男",attrs:{type:""}},2:{text:"女",attrs:{type:""}}},TaskRewards:{coin:{text:"金币",attrs:{type:"warning"}},"task-heart-package":{text:"心动嘉宾",attrs:{type:"danger"}}},UserType:{0:{text:"超级管理员",attrs:{type:""}},1:{text:"普通管理员",attrs:{type:""}},2:{text:"特别用户",attrs:{type:""}},3:{text:"普通用户",attrs:{type:""}}},YesNoStatus:{1:{text:"是",attrs:{type:""}},2:{text:"否",attrs:{type:""}}}};function w(o){if(o){for(const u in o)for(const x in o[u]){const i=o[u][x];for(const l in i)if(i[l]==="")delete i[l];else if(b(i[l])==="Object")for(const y in i[l])i[l][y]===""&&delete i[l][y]}return o}}const j=v("all-tags",()=>{const o=k(g.merge({},h,w(m.getItem("allTags"))));function u(s,e){const a=o[s];if(a){if(e){const n={};for(const t in e)n[t]=a[e[t]];return g.merge({},a,n)}return a}else return console.error("未找到name为"+s+"的tagMap"),{}}function x(s,e){const a=o[s];if(a){if(!e)return;const n={};for(const t in e)n[t]=g.merge(a[t],e[t]);o[s]=n,m.setItem("allTags",o)}else console.error("未找到name为"+s+"的tagMap")}function i(s,e,a="-"){var t;return((t=u(s)[e])==null?void 0:t.text)||a}function l(s,e=[],a=!1){const n=u(s);let t=[];for(let r in n){const{text:c,disabled:p}=n[r],d=isNaN(Number(r))?r:Number(r),f={label:c,value:d};p!==void 0&&(f.disabled=p),t.push(f)}if(b(e)!=="Array")throw new Error("请传入一个数组");return e!=null&&e.length&&(t=t.filter(r=>{const c=e.includes(r.value);return a?!c:c})),t}async function y(s){const e=[].filter(r=>s?s.includes(r.name):!0);m.removeItem("allTags"),o.length=0,g.merge(o,h);const a=await Promise.all(e.map((r,c)=>{const p=r.name;return r({page:1,pageSize:1}).then(d=>{const f={};return f[p]?f[p]():console.error("未找到名为"+p+"的api"),"success"}).catch(()=>"fail")}));let n=0,t=0;a.forEach(r=>{r==="success"?n++:r==="fail"&&t++}),console.log(`成功：${n}`,`失败：${t}`,"allTags---------"),t?console.error("初始化下拉选项时，请求失败"):m.setItem("allTags",o)}function T(s,e,a=["label","value"]){const n=b(e),t={};if(n==="Object")Object.entries(e).map(([r,c],p)=>{t[r]={text:c}});else if(n==="Array"){const[r,c]=a;e.map((p,d)=>{const f=p[c],M=p[r];t[f]={text:M}})}x(s,t)}return{allTags:o,initMap:y,getMap:u,setMap:x,getText:i,getOpts:l,handleSetTagMap:T}});export{j as u};
